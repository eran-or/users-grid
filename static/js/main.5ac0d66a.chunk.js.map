{"version":3,"sources":["api.js","modules/header/Header.js","base/modal/Modal.js","modules/user/Permissions.js","actions/actionTypes.js","actions/userActions.js","modules/user/UserForm.js","modules/user/DeleteUserDialogContent.js","modules/user/UsersList.js","modules/user/Users.js","App.js","serviceWorker.js","reducers/userReducer.js","store.js","index.js","modules/header/header.module.css","modules/user/usersList.module.css","modules/user/userForm.module.css","modules/user/permissions.module.css","modules/user/users.module.css","graphics/logo_icon_inverse.svg","graphics/medigate-logo.svg"],"names":["w","db_mock","hospitals","id","name","users","first_name","last_name","email","permissions","all_hospitals","next_user_id","failSometimes","callback","error_prefix","resolve","reject","Math","random","success","error","runDelayed","delay_ms","parseInt","setTimeout","createPromiseFactory","args","slice","call","arguments","Promise","Object","bind","apply","concat","copyUser","user","assign","copyShallow","obj","medAPI","list","map","get","user_id","found","filter","length","Error","add","all_hospitals_permission","hospitals_permissions","Array","isArray","hospital","h","push","update","update_obj","hospital_id","window","CustomLink","styled","NavLink","props","border","Header","className","theme","header","src","logo","alt","height","nav","exact","to","activeClassName","logoIcon","width","modalHoc","WrappedCmponent","onClose","onOpen","children","rest","useState","isOpen","setIsVisible","unmount","setUnmount","handleClose","disabled","onClick","visible","onAnimationEnd","ModalTriger","displayName","Line","hr","CheckboxWrapper","FormControlLabel","control","Checkbox","label","GreenCheckbox","withStyles","root","color","checked","getHospitals","then","res","catch","err","Permissions","onChange","clear","selectedPermissions","editMode","allChecked","setAllChecked","setHospitals","setChecked","useEffect","tries","getHospitalsAction","a","arr","console","selected","reduce","n","_","handleChecked","index","event","target","c","acc","next","i","style","marginBottom","component","margin","key","API_ERROR","fetchUsers","dispatch","getState","fetchAction","getUsers","type","actions","addUser","saveUser","message","includes","editUser","updateUser","SubmitButton","Button","div","UserForm","requestMessage","setFormRequestMessage","selectedHospitals","setSelectedHospitals","clearPermissions","setClearPermissions","allSelected","setAllSelected","useDispatch","handlePermissionsChange","initialValues","firstname","lastname","validate","values","errors","validator","isEmail","onSubmit","userPermissions","setSubmitting","resetForm","isSubmitting","row","marginRight","flex","field","placeholder","e","add_user_button","info","variant","Row","Content","DeleteUserDialog","lineHeight","marginTop","fontWeight","userId","UserModal","Grid","UsersList","useSelector","state","Card","card","CardContent","customStyles","padding","showCloseButton","closeMaskOnClick","avatar","Users","App","basename","path","from","Boolean","location","hostname","match","userReducer","produce","draft","action","withoutArchivedUsers","usersArchive","middlewares","thunk","store","createStore","combineReducers","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","f","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.5ac0d66a.chunk.js","sourcesContent":["\n(function(w){\n    var db_mock = {\n        hospitals: [\n            {id: 1, name: \"Saint George\"},\n            {id: 2, name: \"Father Dave\"},\n            {id: 3, name: \"Ichilov\"},\n            {id: 4, name: \"Assuta\"},\n            {id: 5, name: \"Saint Claire\"},\n            {id: 6, name: \"Saint Nitsan\"},\n        ],\n        users: [\n            {\n                id: 1,\n                first_name: \"Clarence J.\",\n                last_name: \"Carpenter\",\n                email: \"ClarenceJCarpenter@teleworm.us\",\n                permissions: {\n                    all_hospitals: false,\n                    hospitals: [2, 6]\n                }\n            },\n            {\n                id: 2,\n                first_name: \"Rebecca\",\n                last_name: \"Caballero\",\n                email: \"RebeccaRCaballero@teleworm.us\",\n                permissions: {\n                    all_hospitals: false,\n                    hospitals: [2, 3]\n                }\n            },\n            {\n                id: 3,\n                first_name: \"Peter\",\n                last_name: \"Deguzman-Flores\",\n                email: \"peter.flor@gmail.com\",\n                permissions: {\n                    all_hospitals: false,\n                    hospitals: [2, 6]\n                }\n            },\n            {\n                id: 4,\n                first_name: \"Dumby\",\n                last_name: \"Dumb\",\n                email: \"dumb.eldore@hogwarts.us\",\n                permissions: {\n                    all_hospitals: false,\n                    hospitals: []\n                }\n            },\n            {\n                id: 5,\n                first_name: \"Peggy J.\",\n                last_name: \"Moore\",\n                email: \"PeggyJMoore@armyspy.com\",\n                permissions: {\n                    all_hospitals: false,\n                    hospitals: [1, 2, 3, 4, 6]\n                }\n            },\n            {\n                id: 6,\n                first_name: \"Mena\",\n                last_name: \"Hell\",\n                email: \"i.am.the.fucking.manager@cool.com\",\n                permissions: {\n                    all_hospitals: true,\n                    hospitals: []\n                }\n            },\n            {\n                id: 7,\n                first_name: \"Karen\",\n                last_name: \"Kumar\",\n                email: \"KarenMKumar@rhyta.com\",\n                permissions: {\n                    all_hospitals: false,\n                    hospitals: [6]\n                }\n            },\n        ],\n        next_user_id: 8\n    };\n    \n    function failSometimes(callback, error_prefix, resolve, reject) {\n        if (Math.random() < 0.2) {\n            reject({\n                success: false,\n                error: error_prefix + \": Database is busy\"\n            });\n        } else {\n            try {\n                resolve(callback());\n            } catch (error) {\n                reject({ success: false, error: error });\n            }\n        }\n    }\n\n    function runDelayed(callback) {\n        var delay_ms = parseInt(Math.random() < 0.2 ? Math.random() * 5000 : Math.random() * 300);\n        setTimeout(callback, delay_ms);\n    }\n\n    function createPromiseFactory(callback, error) {\n        return function() {\n            var args = [].slice.call(arguments);\n            return new Promise(function(resolve, reject) {\n                runDelayed(\n                    failSometimes(Object.bind.apply(callback, [null].concat(args)),\n                                  error, resolve, reject)\n                );\n            });\n        };\n    }\n\n    function copyUser(user) {\n        return Object.assign({}, user, {\n            permissions: {\n                all_hospitals: user.permissions.all_hospitals,\n                hospitals: [].concat(user.permissions.hospitals)\n            }\n        });\n    }\n\n    function copyShallow(obj) {\n        return Object.assign({}, obj);\n    }\n\n    w.medAPI = {\n        users: {\n            list: createPromiseFactory(function() { return db_mock.users.map(copyUser); }, \"Failed listing users\"),\n\n            get: createPromiseFactory(function(user_id) {\n                var found = db_mock.users.filter(function(user) { return user.id === user_id; });\n                if (found.length !== 1)\n                    throw new Error(\"Wrong user_id\");\n\n                return copyUser(found[0]);\n            }, \"Failed getting specified user\"),\n\n            add: createPromiseFactory(function(first_name, last_name, email, all_hospitals_permission, hospitals_permissions) {\n                if (typeof all_hospitals_permission !== \"boolean\")\n                    throw new Error(\"all_hospitals_permission should be boolean\");\n\n                if (!Array.isArray(hospitals_permissions))\n                    throw new Error(\"hospitals_permissions should be an array\");\n\n                if (!first_name || !last_name || !email)\n                    throw new Error(\"All fields are required\");\n                \n                if (db_mock.users.filter(function(user) { return user.email === email; }).length > 0)\n                    throw new Error(\"User with the given email already exists\");\n\n                hospitals_permissions.map(function(hospital) {\n                    if (db_mock.hospitals.filter(function(h) { return h.id === hospital; }).length === 0)\n                        throw new Error(\"Invalid hospital id: \" + hospital);\n                    return hospital    \n                });\n\n                var user = {\n                    id: db_mock.next_user_id++,\n                    first_name: first_name,\n                    last_name: last_name,\n                    email: email,\n                    permissions: {\n                        all_hospitals: all_hospitals_permission,\n                        hospitals: [].concat(hospitals_permissions)\n                    }\n                };\n                db_mock.users.push(user);\n\n                return {\n                    success: true,\n                    user: copyUser(user)\n                };\n            }, \"Failed getting specified user\"),\n\n            update: createPromiseFactory(function(user_id, update_obj) {\n                var found = db_mock.users.filter(function(user) { return user.id === user_id; });\n                if (found.length !== 1)\n                    throw new Error(\"Wrong user_id\");\n                \n                var user = found[0];\n                // Ignore the 'id' attribute, it can't be changed\n                if (update_obj.id && update_obj.id !== user_id)\n                    throw new Error(\"User ID can't be changed\");\n\n                delete update_obj[\"id\"];\n                \n                if (update_obj.permissions) {\n                    if (typeof update_obj.permissions.all_hospitals !== \"boolean\")\n                        throw new Error(\"permissions.all_hospitals should be boolean\");\n\n                    if (!Array.isArray(update_obj.permissions.hospitals))\n                        throw new Error(\"permissions.hospitals should be an array\");\n                }\n\n                if (update_obj.permissions && !(update_obj.permissions.all_hospitals && update_obj.permissions.hospitals)) {\n                    return { success: true, user: Object.assign(user, copyUser(update_obj)) };\n                } else {\n                    return { success: false };\n                }\n            }, \"Failed updating specified user\"),\n        },\n\n        hospitals: {\n            list: createPromiseFactory(function() { return db_mock.hospitals.map(copyShallow); }, \"Failed listing hospitals\"),\n            get: createPromiseFactory(function(hospital_id) {\n                var found = db_mock.hospitals.filter(function(hospital) { return hospital.id === hospital_id; });\n                if (found.length !== 1)\n                    throw new Error(\"Wrong hospital_id\");\n\n                return copyShallow(found[0]);\n            }, \"Failed getting specified hospital\"),\n        }\n    };\n})(window);","import React from 'react'\nimport logo from '../../graphics/logo_icon_inverse.svg'\nimport { NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\nimport theme from './header.module.css'\nimport logoIcon from '../../graphics/medigate-logo.svg'\n\nconst CustomLink = styled(NavLink)`\n    border:${props => props.border ? props.border : ''};\n    text-align:center;\n    color:white;\n    text-decoration:none;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    box-sizing: border-box;\n    border-bottom: 5px solid transparent;\n    padding-top:5px;\n`\nconst Header = (props) => {\n  \n  return (\n    <header className={theme.header}>\n      <img src={logo} alt=\"\" height=\"24\" />\n\n      <div className={theme.nav}>\n        <CustomLink exact to=\"/users\" activeClassName={theme[\"header-active-link\"]}>Users</CustomLink>\n        <CustomLink exact to=\"/alerts\" activeClassName={theme[\"header-active-link\"]}>Alerts</CustomLink>\n      </div>\n      <div className={theme[\"header-right\"]}>\n        <div className={theme[\"logo-icon\"]}>\n          <img src={logoIcon} alt=\"\" width=\"24\" />\n\n        </div>\n        <div className={theme[\"header-right-details\"]}>\n          <div>Medigate User</div>\n          <div>Hi</div>\n          <div>LogOut</div>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;","import React, { useState } from 'react';\nimport Rodal from 'rodal';\nimport 'rodal/lib/rodal.css';\n\nconst modalHoc = (WrappedCmponent) => {\n  return function (props) {\n    const { onClose, onOpen, children, ...rest } = props\n    const [isOpen, setIsVisible] = useState(false)\n    const [unmount, setUnmount] = useState(true)\n    \n\n    const handleClose = () => {\n      setIsVisible(false)\n      if (onClose) {\n        onClose()\n      }\n    }\n\n    const handleUnmount = () => {\n      if(!isOpen){\n        setUnmount(true)\n      }\n    }\n    return <>\n\n      <div disabled={isOpen} onClick={() =>{\n        if(onOpen){\n          onOpen()\n        }\n        if(unmount){\n          setUnmount(false)\n        }\n        setIsVisible(true)\n      }}>\n        {children}\n      </div>\n      \n      {!unmount && <Rodal width={400} height={394} {...rest} visible={isOpen} onClose={handleClose} onAnimationEnd={handleUnmount}>\n        <WrappedCmponent {...props} onClose={handleClose} />\n      </Rodal>}\n    </>\n  }\n}\nexport default modalHoc\n\nexport const ModalTriger = ({ children }) => <> {children} </>\nModalTriger.displayName = \"ModalTriger\"","import React, { useState, useEffect } from 'react';\nimport { Field, Formik } from 'formik';\nimport styled from 'styled-components';\nimport theme from './permissions.module.css';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst Line = styled.hr`\nmargin: 10px 0;\n`\n\nconst CheckboxWrapper = (props) => {\n  return <FormControlLabel className={props.className} control={<Checkbox {...props} />} label={props.label} />\n}\n\nconst GreenCheckbox = withStyles({\n  root: {\n    color: '#4EC185',\n    '&$checked': {\n      color: '#4EC185',\n    },\n  },\n  checked: {},\n})((props) => <CheckboxWrapper color=\"default\" {...props} />);\n\nconst getHospitals = () => window.medAPI.hospitals.list().then(res => res).catch(err => err)\n\nconst Permissions = (props) => {\n  const { onChange, clear, selectedPermissions, editMode } = props\n  const [allChecked, setAllChecked] = useState(false)\n  const [hospitals, setHospitals] = useState([])\n  const [checked, setChecked] = useState([])\n\n  useEffect(() => {\n    /// fetch all hospitals\n    let tries = 0;\n    async function getHospitalsAction() {\n      const arr = await getHospitals()\n      if (Array.isArray(arr)) {\n        setHospitals(arr)\n      } else {\n        if (!arr.success) {\n          if (tries < 10) {\n            tries++\n            getHospitalsAction()\n          } else {\n            console.error(arr.error)\n          }\n        }\n      }\n    }\n    getHospitalsAction()\n  }, [])\n\n  useEffect(() => {\n    /// set checked/unchecked of selected permissions\n    const selected = selectedPermissions ? selectedPermissions.reduce((a, n) => ((a[n] = true, a)), {}) : {};\n    let arr;\n    if (!selectedPermissions) {\n      arr = hospitals.map(_ => false)\n    } else {\n      arr = hospitals.map(h => (selected[h.id])? true : false)\n    }\n    setChecked(arr)\n  }, [hospitals, selectedPermissions])\n\n  useEffect(() => {\n    /// clear checkboxes after submit form (but not in edit mode) \n    if (clear) {\n      const arr = hospitals.map(_ => false)\n      setAllChecked(false)\n      setChecked(arr)\n    }\n  }, [clear, hospitals])\n\n  const handleChecked = (index, event) => {\n    let arr = [...checked]\n    arr[index] = event.target.checked\n    setChecked(arr)\n    const allChecked = arr.filter((c) => c).length === arr.length\n    if (allChecked) {\n      onChange(hospitals)\n      arr = arr.map(_ => false)\n      setChecked(arr)\n      setAllChecked(allChecked)\n    } else {\n      const selected = hospitals.reduce((acc, next, i) => {\n        if (arr[i]) {\n          acc.push(next.id)\n        }\n        return acc\n      }, [])\n      onChange(selected)\n    }\n  }\n\n  const handleAllChecked = event => {\n    const arr = checked.map(_ => false)\n    setChecked(arr)\n    const allChecked = event.target.checked ? true : false\n    setAllChecked(allChecked)\n    if (allChecked) {\n      onChange([], true)\n    } else {\n      onChange([])\n    }\n  }\n  \n  return (\n    <Formik>\n      <div>\n        <Line />\n        <div style={{ color: \"#00000061\", marginBottom: '10px' }}>PERMISSIONS</div>\n        <div className={theme.all_hospitals}>\n          <Field className={theme.all_hospitals} disabled={(!!selectedPermissions && !editMode)} name='all_hospitals' label='All Hospitals in network' component={GreenCheckbox}\n            checked={allChecked} onChange={handleAllChecked} />\n\n        </div>\n        <div style={{ margin: \"7px 20px\" }}>can view only:</div>\n        <div className={theme.permissions}>\n          {hospitals.map((h, i) => {\n            const disabled = allChecked || (!!selectedPermissions && !editMode)\n            return <Field key={i} className={theme.all_hospitals} name={\"hospitalIds\"} label={h.name} component={GreenCheckbox}\n              checked={!!checked[i]} disabled={disabled} onChange={(event) => handleChecked(i, event)} />\n          })}\n        </div>\n      </div>\n    </Formik>\n  );\n};\n\nexport default Permissions;","export const UPDATE_USERS = \"UPDATE_USERS\"\nexport const API_ERROR = \"API_ERROR\"\nexport const ARCHIVE_USER = \"ARCHIVE_USER\"\nexport const UPDATE_USER = \"UPDATE_USER\"","import * as actions from './actionTypes'\nexport const fetchUsers = () => {\n  return function (dispatch, getState) {\n    const fetchAction = () => window.medAPI.users.list().then(res => res).catch(err => err)\n    let tries = 0\n    async function getUsers() {\n      const res = await fetchAction()\n      if (Array.isArray(res)) {\n        return dispatch({\n          type: actions.UPDATE_USERS,\n          users: res,\n        });\n      } else {\n        if (!res.success) {\n          if (tries < 10) {\n            tries++\n            getUsers()\n          } else {\n            dispatch({\n              type: actions.API_ERROR,\n              err: res.error,\n            });\n            return res.error\n          }\n        }\n      }\n    }\n    getUsers()\n  }\n}\n\n\nexport const addUser = (...user) => {\n  return function (dispatch, getState) {\n    const fetchAction = (...user) => window.medAPI.users.add(...user).then(res => res).catch(err => err)\n    let tries = 0\n    async function saveUser(...user) {\n      const res = await fetchAction(...user)\n      if (res.success) {\n        dispatch(fetchUsers())\n        return 'success'\n      } else {\n        if(res.error instanceof Object && !(res.error instanceof Array)){\n          dispatch({\n            type: actions.API_ERROR,\n            err: res.error\n          })\n          return {error: res.error.message}\n        }else{\n          if (res.error.includes(\"Database is busy\") && tries < 10) {\n            tries++\n            return saveUser(...user)\n          }\n          dispatch({\n            type: actions.API_ERROR,\n            err: res.error\n          })\n          return {error: res.error}\n        }\n      }\n    }\n    return saveUser(...user)\n  }\n}\n\nexport const archiveUser = (userId) => {\n  return function (dispatch, getState) {\n    dispatch({\n      type: actions.ARCHIVE_USER,\n      userId\n    })\n    dispatch(fetchUsers())\n  }\n}\n\n\nexport const editUser = (user_id, update_obj) => {\n\n  const fetchAction = (id, user) => window.medAPI.users.update(id, user).then(res => res).catch(err => err)\n  return function (dispatch, getState) {\n    let tries = 0\n    async function updateUser(user_id, update_obj) {\n      const res = await fetchAction(user_id, update_obj)\n      if (res.success) {\n        dispatch(fetchUsers())\n        return 'success'\n      } else {\n        if(res.error instanceof Object && !(res.error instanceof Array)){\n          dispatch({\n            type: actions.API_ERROR,\n            err: res.error\n          })\n          return {error: res.error.message}\n        }else{\n          if (res.error.includes(\"Database is busy\") && tries < 10) {\n            tries++\n            return updateUser(user_id, update_obj)\n          }\n          dispatch({\n            type: actions.API_ERROR,\n            err: res.error\n          })\n          return {error: res.error}\n        }\n      }\n    }\n    return updateUser(user_id, update_obj)\n  }\n}","import React, { useState, useEffect } from 'react'\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport validator from 'validator'\nimport styled from 'styled-components';\nimport theme from './userForm.module.css';\nimport Button from '@material-ui/core/Button';\nimport Permissions from './Permissions';\nimport { addUser, editUser } from '../../actions/userActions'\nimport { useDispatch } from 'react-redux'\n\nconst SubmitButton = styled(Button)`\n  &&&{\n    font-size:10px;\n  }\n`\nconst Line = styled.hr`\nmargin: 10px 0;\n`\nconst Header = styled.div`\n    font-weight:bold;\n    margin-bottom:15px;\n`\nconst UserForm = (props) => {\n  const [requestMessage, setFormRequestMessage] = useState('')\n  const { user } = props\n  const [selectedHospitals, setSelectedHospitals] = useState([])\n  const [clearPermissions, setClearPermissions] = useState(false)\n  const [allSelected, setAllSelected] = useState(false)\n  const dispatch = useDispatch()\n  \n  const handlePermissionsChange = (hospitals, allSelected) => {\n      setSelectedHospitals(hospitals)\n      setAllSelected(!!allSelected)\n  }\n\n  const editMode = user? true : false\n  useEffect(()=>{\n    if(editMode){  \n      setSelectedHospitals(user.permissions.hospitals)\n      setAllSelected(user.permissions.all_hospitals)\n    }\n  },[editMode, user])  \n  \n  return <div>\n    <Header>{editMode? 'EDIT USER' : 'NEW USER'}</Header>\n    <Formik\n      initialValues={{ email: editMode? user.email : '', firstname: editMode? user.first_name : '', lastname: editMode? user.last_name : '' }}\n      validate={values => {\n\n        const errors = {};\n        if (!values.email) {\n          errors.email = 'Email is required';\n        } else if (\n          !validator.isEmail(values.email)\n        ) {\n          errors.email = 'Invalid email address';\n        }\n        if (!values.firstname) {\n          errors.firstname = 'Firstname is required'\n        }\n        if (!values.lastname) {\n          errors.lastname = 'Lastname is  required'\n        }\n        return errors;\n      }}\n\n      onSubmit={(values, { setSubmitting, resetForm }) => {\n        let userPermissions;\n        if(allSelected){\n          userPermissions = []\n        }else{\n          userPermissions = selectedHospitals\n        }\n        const { firstname, lastname, email } = values\n\n        async function saveUser() {\n          let res\n          if(!editMode){\n            res = await dispatch(addUser(firstname, lastname, email, allSelected, userPermissions)).then(res=> res).catch(err=> err)\n          }else{\n            \n            const update_obj = {\n              id: user.id,\n              first_name:firstname,\n              last_name: lastname, \n              email,\n              permissions:{\n                all_hospitals: allSelected,\n                hospitals: userPermissions\n              }\n            }\n            res = await dispatch(editUser(user.id, update_obj)).then(res=>res).catch(err=>err)\n          }\n          if(res === 'success'){\n            setFormRequestMessage('user saved!')\n            if(!editMode){\n              resetForm()\n              setClearPermissions(true)\n              setClearPermissions(false)\n            }else{\n              setClearPermissions(false)\n            }\n          }else{\n            setFormRequestMessage(res.error)\n          }\n        }\n        saveUser()\n        setSubmitting(false)\n      }}>\n      {({ isSubmitting, values }) => (\n        <Form>\n          <div>\n            <div className={theme.row}>\n              <div style={{ marginRight: '20px', flex: '1', height:'54px' }}>\n                <Field type=\"text\" name=\"firstname\">\n                {({ field }) => <input type=\"text\" placeholder=\"Firstname\" {...field}\n                onChange={(e) => {\n                  setFormRequestMessage('')\n                  field.onChange(e)\n                }} />}\n            </Field>\n                <ErrorMessage name=\"firstname\" component=\"div\" style={{ color: \"red\" }} />\n              </div>\n              <div style={{ flex: \"1\" }}>\n                <Field type=\"text\" name=\"lastname\">\n                {({ field }) => <input type=\"text\" placeholder=\"Lastname\" {...field}\n                onChange={(e) => {\n                  setFormRequestMessage('')\n                  field.onChange(e)\n                }} />}\n            </Field>\n                <ErrorMessage name=\"lastname\" component=\"div\" style={{ color: 'red' }} />\n              </div>\n            </div>\n            <Field type=\"text\" name=\"email\">\n              {({ field }) => <input type=\"text\" placeholder=\"Email\" {...field}\n                onChange={(e) => {\n                  setFormRequestMessage('')\n                  field.onChange(e)\n                }} />}\n            </Field>\n            <div style={{ height: \"8px\", color: 'red' }}>\n              <ErrorMessage name=\"email\" component=\"div\" />\n            </div>\n            <Permissions onChange={handlePermissionsChange} clear={clearPermissions} \n              selectedPermissions={editMode? selectedHospitals : ''} editMode={editMode} />\n            <Line />\n            <div className={theme.add_user_button}>\n              <div className={requestMessage === 'user saved!'? theme.info : theme.error}>{requestMessage}</div>\n              <SubmitButton type=\"submit\" color=\"primary\" variant=\"contained\" disabled={isSubmitting}>{editMode? 'SAVE' : 'ADD USER'}</SubmitButton>\n            </div>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  </div>\n\n}\n\nexport default UserForm","import React from 'react';\nimport styled from 'styled-components';\nimport Button from '@material-ui/core/Button';\nimport { archiveUser } from '../../actions/userActions';\nimport { useDispatch } from 'react-redux'\n\nconst Row = styled.div`\n    display:flex;\n    justify-content:flex-end;\n    position: relative;\n    left: 30px;\n`\nconst Content = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    height: 100%;\n`\nconst DeleteUserDialogContent = (props) => {\n\n  const { onClose, user } = props\n  const dispatch = useDispatch()\n\n  const handleConfirm = () => {\n    dispatch(archiveUser(user.id))\n    \n    \n    onClose()\n  }\n\n  return (\n    <Content>\n        <h3>Are you sure you want to delete this user?</h3>\n        <p style={{color:'#00000061', lineHeight: '2em', marginTop: 0}}>Clicking OK will delete all user details and and move it to archive</p>\n      <Row>\n        <Button onClick={onClose} style={{color:'#00000061', fontWeight:'bold'}}>CANCEL</Button>\n        <Button onClick={handleConfirm} style={{color:'#4EC185', fontWeight:'bold'}}>OK</Button>\n      </Row>\n    </Content>\n  )\n}\n\nexport default DeleteUserDialogContent","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport styled from 'styled-components';\nimport Gravatar from 'react-gravatar';\nimport CardContent from '@material-ui/core/CardContent';\nimport theme from './usersList.module.css';\nimport Permissions from './Permissions';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteUserDialogContent from './DeleteUserDialogContent';\nimport modalHoc, { ModalTriger } from '../../base/modal/Modal';\nimport { useSelector } from 'react-redux';\nimport UserForm from './UserForm';\n\nconst DeleteUserDialog = modalHoc(DeleteUserDialogContent)\nconst UserModal = modalHoc(UserForm)\n\nconst Grid = styled.div`\n  display:grid;\n  grid-template-columns: repeat(auto-fill, 209px);\n  grid-gap: 41px;\n  justify-items:center;\n  justify-content:center;\n`\nfunction UsersList(props) {\n  const users = useSelector(state => state.users.list)\n\n  return (\n\n    <Grid>\n      {users.map(user => {\n        return <Card key={user.id} className={theme.card}>\n          <CardContent className={theme[\"card-content\"]}>\n            <div className={theme[\"actions-buttons\"]}>\n              <UserModal user={user}>\n                <ModalTriger>\n                  <EditIcon color=\"action\" />\n                </ModalTriger>\n              </UserModal>\n\n              <DeleteUserDialog width={280} height={192} customStyles={{ padding: '15px 30px' }} showCloseButton={false} closeMaskOnClick={false}\n                user={user}>\n                <ModalTriger>\n                  <DeleteIcon color=\"action\" />\n                </ModalTriger>\n              </DeleteUserDialog>\n            </div>\n            <div>\n              <Gravatar className={theme.avatar} email={user.email} />\n            </div>\n            <strong className={theme[\"user_name\"]}>{user.first_name} {user.last_name}</strong>\n            <small>{user.email}</small>\n            <Permissions clear={false} selectedPermissions={user.permissions.hospitals} />\n          </CardContent>\n        </Card>\n      })}\n    </Grid>\n  );\n}\n\nexport default UsersList;","import React, { useEffect } from 'react';\nimport theme from './users.module.css';\nimport modalHoc, { ModalTriger } from '../../base/modal/Modal';\nimport UserForm from './UserForm';\nimport UsersList from './UsersList';\nimport Button from '@material-ui/core/Button';\nimport { fetchUsers } from '../../actions/userActions'\nimport { useSelector, useDispatch } from 'react-redux'\n\nconst UserModal = modalHoc(UserForm)\n\nconst Users = props => {  \n  const users = useSelector(state => state.users.list)\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch(fetchUsers())\n  }, [dispatch]);\n\n\n  return (<div className={theme.users}>\n    <div className={theme[\"add-user-button\"]}>\n      <div style={{width:'fit-content'}}>\n      <UserModal>\n        <ModalTriger><Button variant=\"outlined\" color=\"primary\" style={{fontWeight: 'bold'}}>+ Add New User</Button></ModalTriger>\n      </UserModal>\n      </div>\n    </div >\n      \n      <UsersList users={users} />\n      </div>);\n}\n\nexport default Users;","import React from 'react';\nimport './App.css';\nimport { Switch, Route, BrowserRouter as Router, Redirect } from 'react-router-dom'\nimport Header from './modules/header/Header'\nimport Users from './modules/user/Users'\n\nfunction App() {\n  return (\n    <>\n    <Router basename=\"/users-grid\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/logout\">\n          {/* <Logout /> */}\n          <div>Logout</div>\n        </Route>\n        <Route exact path=\"/alerts\">\n          {/* <Alerts /> */}\n          <div>Alerts</div>\n        </Route>\n        <Route exact path=\"/users\">\n          <Users />\n        </Route>\n        <Route path=\"/\">\n          <Redirect from=\"/\" to=\"/users\" />\n          {/* <Home /> */}\n        </Route>\n      </Switch>\n    </Router>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actions from '../actions/actionTypes'\nimport produce from \"immer\"\n\nexport const userReducer = produce(\n  (draft, action) => {\n    switch (action.type) {\n      case actions.UPDATE_USERS:\n        const withoutArchivedUsers = action.users.filter(user=>{\n          return !draft.usersArchive.includes(user.id)\n        })\n        draft.list = withoutArchivedUsers\n        return\n      case actions.API_ERROR:\n        draft.err = action.err\n        return\n      case actions.ARCHIVE_USER:\n        draft.usersArchive = [...draft.usersArchive, action.userId]\n        return\n      default:\n        return draft\n    }\n  }, {list: [], usersArchive:[]})","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\nimport {userReducer} from './reducers/userReducer'\nimport thunk from 'redux-thunk'\n\nconst middlewares = [thunk]\nexport default () => {\n  const store = createStore(\n    combineReducers({\n      users: userReducer\n    }),\n    compose(\n      applyMiddleware(\n        ...middlewares\n      ),(window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()) ? window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\n    )\n  );\n  return store;\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"./api\";\nimport { Provider } from 'react-redux';\nimport storeCreate from './store'\nconst store = storeCreate()\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__3ZJN9\",\"logo-icon\":\"header_logo-icon__1ld10\",\"header-right\":\"header_header-right__EkXue\",\"nav\":\"header_nav__1c-Kh\",\"header-active-link\":\"header_header-active-link__WgjYU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"usersList_card__3je-i\",\"actions-buttons\":\"usersList_actions-buttons__35DBO\",\"avatar\":\"usersList_avatar__3SmgU\",\"card-content\":\"usersList_card-content__kN7FQ\",\"user_name\":\"usersList_user_name__3zi5P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"userForm_row__2YCPc\",\"add_user_button\":\"userForm_add_user_button__3zWuP\",\"error\":\"userForm_error__2c647\",\"info\":\"userForm_info__lsBKP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"all_hospitals\":\"permissions_all_hospitals__3tQ1-\",\"permissions\":\"permissions_permissions__HkAHO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"users_users__1O_pH\",\"add-user-button\":\"users_add-user-button__2fOzY\"};","module.exports = __webpack_public_path__ + \"static/media/logo_icon_inverse.7d848bdf.svg\";","module.exports = __webpack_public_path__ + \"static/media/medigate-logo.badead22.svg\";"],"sourceRoot":""}